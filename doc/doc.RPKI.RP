****** RPKI Relying Party Tools ******

This collection of tools implements the "relying party" role of the RPKI
system, that is, the entity which retrieves RPKI objects from repositories,
validates them, and uses the result of that validation process as input to
other processes, such as BGP security.

See the CA tools for programs to help you generate RPKI objects, if you need to
do that.

***** Overview of the tools *****

Here's a brief summary of the current relying party tools.

**** rcynic ****

rcynic is the primary validation tool. It does the actual work of RPKI
validation: checking syntax, signatures, expiration times, and conformance to
the profiles for RPKI objects. The other relying party programs take rcynic's
output as their input.

See the instructions for setting up and running rcynic.

**** rcynic-html ****

rcynic-html is a post-processor which converts rcyic's XML status output into a
set of HTML pages displaying status and history.

**** rcynic-cron ****

rcynic-cron is a small script to run the most common set of relying party tools
under cron. See the discussion of running relying party tools under cron for
further details.

**** rtr-origin ****

rtr-origin is an implementation of the rpki-rtr protocol, using rcynic's output
as its data source. rtr-origin includes the rpki-rtr server, a test client, and
a utiltity for examining the content of the database rtr-origin generates from
the data supplied by rcynic.

See the instructions for setting up rtr-origin for further details.

**** roa-to-irr ****

roa-to-irr is an experimental program for converting RPKI ROA data into IRR
data. Some operators have established procedures that depend heavily on IRR, so
being able to distribute validated RPKI data via IRR is somewhat useful to
these operators.

Opinions vary regarding exactly what the RPSL corresponding to a particular set
of ROAs should look like, so roa-to-irr is currently experimental code at best.
Operators who really care about this may well end up writing their own ROA to
IRR conversion tools.

roa-to-irr expects its output to be piped to the irr_rpsl_submit program.

roa-to-irr isn't really documented (yet?). If you care, see the code.

**** Utilities ****

You may also find some of the RPKI utility programs useful.

;;; -*- Lisp -*-
;;; $URL$
;;; $Id$
;;;
;;; This file is psuedocode, I just wanted to take advantage of
;;; emacs's built-in support for languages with reasonable syntax.
;;; Final version will likely be either flat text or ASN.1.
;;;
;;; Signed manifests for RPKI repositories.  We're using object (as
;;; opposed to channel) security for everything in the repository,
;;; which is the right thing to do for various reasons but leaves us
;;; open to attacks which intercept the rsync connection and drop
;;; valid objects out of an SIA collection.  At present this is not
;;; detectable, so we need a mechanism.
;;;
;;; Manifest is modeled heavily on CRLs, because the issues involved
;;; in detecting stale manifests, manifest replays, etc are similar to
;;; those for CRLs.  So, to a first approximation, we want all the
;;; fields that a CRL has.  Syntax will probably differ, though, since
;;; RPKI repositories can contain objects not covered by CRLs (eg,
;;; ROAs), and we may well decide just to sign the manifest with CMS.
;;;
;;; See RFC 3280 section 5 for CRL layout and extensions.
;;;
;;; We're only trying to cover objects in the same SIA collection
;;; (directory) as the manifest.  We will probably want to name the
;;; manifest itself with a name derived from the g(ski) of the cert of
;;; which this is the SIA collection.  We'll need an EE cert to sign
;;; the manifest; the EE cert should probably just use RFC 3779
;;; inheritance to cover all the resources that its issuer holds.  If we
;;; use CMS, we might just want to include the EE cert in the CMS
;;; bag of certs.
;;;
;;; One possible way of representing the objects in a collection would
;;; be with pairs of:
;;;
;;;   filename of the object (within the collection, eg, "fnord.cer")
;;;   hash of the object (eg sha256(fnord.cer))
;;;
;;; For the moment I assume we're signing with CMS, so the signature
;;; parameters and signature itself are not included below.  I'm including
;;; some fields we may decide to drop later, because it's easier to see
;;; extraneous fields than it is to see missing ones.

(manifest :version 1
	  :collection-uri "rsync://foo.example/wombat/"
	  :this-update    timestamp
	  :next-update    timestamp
	  :manifest-serial 17
	  :hash-algorithm :sha256
	  (:name foo.cer :hash b5bb9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c)
	  (:name bar.cer :hash b00b9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c)
	  (:name foo.roa :hash a00b9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c)
	  (:name baz.crl :hash c00b9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c)
	  ...)

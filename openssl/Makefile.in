# $Id$

VERSION = 1.0.0b

OPENSSL_CONFIG_COMMAND  = @OPENSSL_CONFIG_COMMAND@
OPENSSL_BUILD_DIRECTORY = ${abs_builddir}/openssl
OPENSSL_SO_GLOB		= @OPENSSL_SO_GLOB@
PYWRAP_LIBDIR		= @PYWRAP_LIBDIR@

abs_top_srcdir		= @abs_top_srcdir@
abs_top_builddir	= @abs_top_builddir@
prefix			= @prefix@
exec_prefix		= @exec_prefix@
libdir			= @libdir@

# We need to build with enable-shared whether we're really trying to
# build shared OpenSSL libraries or not, because _POW.so requires
# position independent code, so we need OpenSSL compiled with the
# options it would use for a shared library.  This then requires
# further gymnastics to get an openssl executable linked against the
# static libraries, which we want so that we don't have to set
# LD_LIBRARY_PATH in all of our test scripts.

OPTIONS = enable-rfc3779 enable-cms no-dso enable-shared --prefix=${prefix}

all: openssl-${VERSION}/Makefile
	cd openssl-${VERSION}; ${MAKE} $@ LIBRPATH=${PYWRAP_LIBDIR}
	cd openssl-${VERSION}; mkdir disabled; mv -fv ${OPENSSL_SO_GLOB} disabled
	cd openssl-${VERSION}; rm apps/openssl; cd apps; ${MAKE} $@
	cd openssl-${VERSION}; mv -fv disabled/${OPENSSL_SO_GLOB} .; rmdir disabled
	ln -sf openssl-${VERSION} openssl

clean:
	rm -rf openssl-${VERSION} openssl
	cd tests; ${MAKE} $@

distclean: clean
	cd tests; ${MAKE} $@
	rm -f Makefile

openssl-${VERSION}/Makefile: openssl-${VERSION}/config
	cd openssl-${VERSION}; ${OPENSSL_CONFIG_COMMAND} ${OPTIONS}
	cd openssl-${VERSION}; ${MAKE} depend

openssl-${VERSION}/config: openssl-${VERSION}.tar.gz
	gzip -c -d openssl-${VERSION}.tar.gz | tar -xf -
	ln -s . openssl-${VERSION}/lib
	touch $@

install:
	@echo Not attempting to install modified OpenSSL, if you want that, do it yourself

sandblast:
	svn st -v openssl* | awk '/^I/ && NF == 2 {system("set -x; rm -rf " $$2)}'

test: all
	cd tests; ${MAKE} $@

Installation Guide

   Preliminary installation instructions for rpkid et al.

   These are the production-side RPKI tools, for Internet Registries
   (RIRs, LIRs, etc). See the "rcynic" program for relying party tools.

   rpkid is a set of Python modules supporting generation and maintenance
   of resource certificates. Most of the code is in the rpkid/rpki/
   directory. rpkid itself is a relatively small program that calls the
   library modules. There are several other programs that make use of the
   same libraries, as well as a collection of test programs.

   At present the package is intended to be run out of its build
   directory. Setting up proper installation in a system area using the
   Python distutils package would likely not be very hard but has not yet
   been done.

   Note that initial development of this code has been on FreeBSD, so
   installation will probably be easiest on FreeBSD.

   Before attempting to build the package, you need to install any missing
   prerequisites. Note that the Python code requires Python version 2.5.
   rpkid et al are mostly self-contained, but do require a small number of
   external packages to run.

     * http://codespeak.net/lxml/. lxml in turn requires the Gnome LibXML2
       C libraries.
          + FreeBSD: /usr/ports/devel/py-lxml
          + Fedora: python-lxml.i386
     * http://sourceforge.net/projects/mysql-python/. MySQLdb in turn
       requires MySQL client and server. rpkid et al have been tested with
       MySQL 5.0 and 5.1.
          + FreeBSD: /usr/ports/databases/py-MySQLdb
          + Fedora: MySQL-python.i386

   rpkid et al also make heavy use of a modified copy of the Python
   OpenSSL Wrappers (POW) package, but this copy has enough modifications
   and additions that it's included in the subversion tree.

   The next step is to build the OpenSSL and POW binaries. At present the
   OpenSSL code is just a copy of the stock OpenSSL 0.9.8g release,
   compiled with special options to enable RFC 3779 support that ISC wrote
   under previous contract to ARIN. The POW (Python OpenSSL Wrapper)
   library is an extended copy of the stock POW release.

   To build these, cd to the top-level directory in the distribution and
   type "make".

   $ cd $top
   $ make

   This should automatically build everything, in the right order,
   including staticly linking the POW extension module with the OpenSSL
   library to provide RFC 3779 support.

   You will also need a MySQL installation. This code was developed using
   MySQL 5.1 and has been tested with MySQL 5.0 and 5.1.

   The architecture is intended to support hardware signing modules
   (HSMs), but the code to support them has not been written.

   At this point, you should have all the necessary software installed.
   You will probably want to test it. All tests should be run from the
   rpkid/ directory. The test suite requires a few more external packages,
   only one of which is Python code.

     * http://pyyaml.org/. testpoke.py (an up-down protocol command line
       test client) and testbed.py (a test harness) use PyYAML.
          + FreeBSD: /usr/ports/devel/py-yaml
     * http://xmlsoft.org/XSLT/. Some of the test code uses xsltproc, from
       the Gnome LibXSLT package.
          + FreeBSD: /usr/ports/textproc/libxslt
     * http://w3m.sourceforge.net/. testbed.py uses w3m to display the
       summary output from rcynic. Nothing terrible will happen if w3m
       isn't available, testbed.py will just complain about it being
       missing and won't display rcynic's output.
          + FreeBSD: /usr/ports/www/w3m

   Some of the tests require MySQL databases to store their data. To set
   up all the databases that the tests will need, run the SQL commands in
   rpkid/testbed.sql. The MySQL command line client is usually the easiest
   way to do this, eg:

   $ cd $top/rpkid
   $ mysql -u root -p <testbed.sql

   To run the tests, run "make all-tests":

   $ cd $top/rpkid
   $ make all-tests

   If nothing explodes, your installation is probably ok. Any Python
   backtraces in the output indicate a problem.

   There's a last set of tools that only developers should need, as
   they're only used when modifying schemas or regenerating the
   documentation. These tools are listed here for completeness.

     * http://www.doxygen.org/. Doxygen in turn pulls in several other
       tools, notably Graphviz, pdfLaTeX, and Ghostscript.
          + FreeBSD: /usr/ports/devel/doxygen
     * http://lynx.isc.org/current/. The documentation build process uses
       xsltproc and Lynx to dump flat text versions of a few critical
       documentation pages.
          + FreeBSD: /usr/ports/www/lynx
     * http://www.thaiopensource.com/relaxng/trang.html. Trang is used to
       convert RelaxNG schemas from the human-readable "compact" form to
       the XML form that LibXML2 understands. Trang in turn requires Java.
          + FreeBSD: /usr/ports/textproc/trang
     * http://search.cpan.org/dist/SQL-Translator/. SQL-Translator, also
       known as "SQL Fairy", includes code to parse an SQL schema and dump
       a description of it as Graphviz input. SQL Fairy in turn requires
       Perl.
     __________________________________________________________________


    Generated on Tue Jun 9 20:45:21 2009 for RPKI Engine by  doxygen
    1.5.8

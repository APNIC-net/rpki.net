# $Id$
#
# Sample Django settings.py for running the RPKI portal gui.  This
# template was written for Django 1.2.
#
# DO NOT EDIT!  This file is automatically generated from
# settings.py.in

DEBUG = True
TEMPLATE_DEBUG = DEBUG

DATABASES = {
  'default' : {
    'ENGINE': 'django.db.backends.sqlite3',
    'NAME'  : '%(AC_DATABASE_PATH)s'
  }
}

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'UTC'

# Make this unique, and don't share it with anybody.
SECRET_KEY = '%(AC_SECRET_KEY)s'

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
    'django.template.loaders.eggs.Loader'
)

TEMPLATE_DIRS = (
    '%(AC_TEMPLATE_DIR)s',
)

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    # order is important here.  if csrfmidware is put before condgetmidware,
    # the returned pages get truncated for some reason!
    'django.middleware.http.ConditionalGetMiddleware',

    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware'
)

ROOT_URLCONF = 'rpki.gui.urls'

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.admin',
    'django.contrib.admindocs',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'rpki.gui.app'
)

TEMPLATE_CONTEXT_PROCESSORS = (
    "django.contrib.auth.context_processors.auth",
    "django.core.context_processors.debug",
    "django.core.context_processors.i18n",
    "django.core.context_processors.media",
    "django.contrib.messages.content_processors.messages",
    "django.core.context_processors.request"
)
